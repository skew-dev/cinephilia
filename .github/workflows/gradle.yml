# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle | Build test

on:
  #push:
    #branches: [ main, test-gradle-build ]
  pull_request:
    branches: [ main ]

jobs:
  #logging:
  #  runs-on: ubuntu-latest
  #  steps:
  #  - name: Testing environment Variables
  #    run: |
  #      echo "SQL_URL: ${{ secrets.SQL_URL }}"
  #      echo "SQL_USERNAME: ${{ secrets.SQL_USERNAME }}" 
  #      echo "SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}" 
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['4.2']
    steps:
    - uses: actions/checkout@v2
    - name: Setup PostgreSQL with PostgreSQL extensions and unprivileged user
      uses: Daniel-Marynicz/postgresql-action@0.1.0
      with:
        # Docker postgres image tag for available image tags please see https://hub.docker.com/_/postgres
        #postgres_image_tag: # optional, default is latest
        # POSTGRES_USER - create the user with the superuser power
        postgres_user: cinephiler-dev
        # POSTGRES_DB - postgres database
        postgres_db: cinephiliadb
        # POSTGRES_PASSWORD - superuser password
        postgres_password: cinephilia-pass-dev
        # POSTGRES_EXTENSIONS - List of postgres extensions separated by space to install in template1 database
        #postgres_extensions: # optional
        # APP_USER - unprivileged postgres user
        #app_user: # optional, default is app
        # APP_PASSWORD_USER - password for unprivileged postgres user
        #app_user_password: # optional, default is app
        # APP_DB - database or list of databases separated by space for unprivileged postgres user
        #app_db: # optional, default is app
        # EXPOSED_POSTGRES_PORT - exposed postgres port
        #exposed_postgres_port: # optional, default is 5432
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-username: admin
        mongodb-password: admin
        mongodb-db: mydb
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x server/gradlew
    - name: Build with Gradle
      env: 
        SQL_URL: ${{ secrets.SQL_URL }}
        SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        NOSQL_URI: ${{ secrets.NOSQL_URI }}
        NOSQL_DATABASE: ${{ secrets.NOSQL_DATABASE }}
      run: |
        cd server
        ./gradlew build --stacktrace 
        
